# Server options {{{
set-option -s escape-time 0
set-option -g exit-empty off
set-option -g status-keys emacs
set-option -g prefix C-q
set-option -g default-command "${SHELL}"
set-option -g remain-on-exit off
set-option -g focus-events on
set-option -g extended-keys on
# }}}

# Session options {{{
set-option -ga terminal-overrides ",alacritty:RGB"
set-option -g detach-on-destroy off
set-option -g default-terminal "tmux-256color"
set-option -g mouse on
set-option -g status-position bottom
set-option -g status-justify centre
set-option -g status-left '[#S]'
set-option -g status-left-length 50
set-option -g status-right "#(fonts) %d/%m  %H:%M "
set-option -g status-right-length 50
# }}}

# Window options {{{
set-option -g pane-border-status off
set-option -g pane-active-border-style bg=terminal,fg=colour2
set-option -g window-status-current-style bg=colour1,fg=colour16
set-option -g window-status-current-format ' #I:#W#F '
set-option -g window-status-format ' #I:#W#F '
set-option -g window-active-style 'fg=terminal,bg=terminal'
set-option -g clock-mode-colour '#004444'
# }}}

# Prefix key binds {{{
bind-key    r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message "Config reloaded!"
bind-key    n new-window -c "#{pane_current_path}"
bind-key    N command-prompt -p cmd { new-window -c "#{pane_current_path}" %% }
bind-key    S command-prompt -p 'Starting directory?,Session name?' -I '#{pane_current_path},%1' { new-session -c "%1" -s "%2" }
bind-key    H join-pane -bhf -t bottom-left
bind-key    J join-pane -f -t bottom
bind-key    K join-pane -bf -t top
bind-key    L join-pane -hf -t bottom-right
bind-key -r j resize-pane -D 1
bind-key -r h resize-pane -L 1
bind-key -r k resize-pane -U 1
bind-key -r l resize-pane -R 1
bind-key -r c kill-pane
bind-key    ? list-keys
bind-key    C-j join-pane -bh -s :- -t :.
bind-key    C-k break-pane -b -s 0
bind-key    C-h command-prompt -p help { splitw man --encoding=us-ascii tmux; send "/^ * %% \\[" Enter }
bind-key    C-u run-shell tmux-popup
# }}}

# Root key binds {{{

# Ctrl key bind
bind-key -T root C-M-h previous-window
bind-key -T root C-M-l next-window

bind-key -T root q if-shell "test #{pane_dead} -eq 0" "send-keys q" "kill-pane"

# Meta key bind
bind-key -T root M-p copy-mode
bind-key -T root M-h select-pane -L
bind-key -T root M-j select-pane -D
bind-key -T root M-k select-pane -U
bind-key -T root M-l select-pane -R
bind-key -T root M-- split-window -c "#{pane_current_path}"
bind-key -T root M-\\ split-window -h -c "#{pane_current_path}"
bind-key -T root M-Down resize-pane -D 1
bind-key -T root M-Left resize-pane -L 1
bind-key -T root M-Up resize-pane -U 1
bind-key -T root M-Right resize-pane -R 1
bind-key -T root M-\; last-pane
# }}}

set-environment -g EDITOR nvim
set-environment -g VISUAL nvim
set-environment -g SUDO_EDITOR nvim

# vim: foldlevel=0 foldmethod=marker
